@model GirlScoutTroop41645Page.Models.Form

@{
    ViewData["Title"] = "Edit Form";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3>@ViewData["Title"] - @Model.Title</h3>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5>Form Details</h5>
                            <form id="formDetailsForm">
                                <input type="hidden" name="FormId" value="@Model.FormId" />
                                
                                <div class="form-floating mb-3">
                                    <input name="Title" value="@Model.Title" class="form-control" placeholder="Enter form title" required />
                                    <label class="form-label">Title</label>
                                </div>

                                <div class="form-floating mb-3">
                                    <textarea name="Description" class="form-control" placeholder="Enter form description" style="height: 100px">@Model.Description</textarea>
                                    <label class="form-label">Description</label>
                                </div>

                                <div class="form-floating mb-3">
                                    <input name="DueDate" value="@(Model.DueDate?.ToString("yyyy-MM-ddTHH:mm"))" class="form-control" type="datetime-local" />
                                    <label class="form-label">Due Date</label>
                                    <div class="form-text">Leave blank if there's no due date</div>
                                </div>

                                <div class="form-check mb-3">
                                    <input name="IsActive" class="form-check-input" type="checkbox" @(Model.IsActive ? "checked" : "") />
                                    <label class="form-check-label">
                                        Active (users can fill out this form)
                                    </label>
                                </div>

                                <button type="button" id="saveFormDetails" class="btn btn-primary">Update Form Details</button>
                            </form>
                        </div>
                        
                        <div class="col-md-6">
                            <h5>Add Form Field</h5>
                            <form id="addFieldForm">
                                <input type="hidden" name="FormId" value="@Model.FormId" />
                                
                                <div class="form-floating mb-3">
                                    <input name="Label" class="form-control" placeholder="Enter field label" required />
                                    <label class="form-label">Field Label</label>
                                </div>

                                <div class="form-floating mb-3">
                                    <select name="FieldType" class="form-select" required>
                                        <option value="">Select field type...</option>
                                        <option value="0">Text Input</option>
                                        <option value="1">Text Area</option>
                                        <option value="2">Number</option>
                                        <option value="3">Email</option>
                                        <option value="4">Date</option>
                                        <option value="5">Checkbox</option>
                                        <option value="6">Radio Buttons</option>
                                        <option value="7">Dropdown</option>
                                    </select>
                                    <label class="form-label">Field Type</label>
                                </div>

                                <div class="form-floating mb-3">
                                    <textarea name="HelpText" class="form-control" placeholder="Help text (optional)" style="height: 80px"></textarea>
                                    <label class="form-label">Help Text</label>
                                </div>

                                <div class="form-floating mb-3" id="optionsContainer" style="display: none;">
                                    <textarea name="Options" class="form-control" placeholder="Enter options, one per line" style="height: 100px"></textarea>
                                    <label class="form-label">Options (one per line)</label>
                                    <div class="form-text">For radio buttons and dropdowns</div>
                                </div>

                                <div class="form-check mb-3">
                                    <input name="IsRequired" class="form-check-input" type="checkbox" />
                                    <label class="form-check-label">Required Field</label>
                                </div>

                                <button type="submit" class="btn btn-success">Add Field</button>
                            </form>
                        </div>
                    </div>

                    <hr />

                    <div class="row">
                        <div class="col-12">
                            <h5>Form Fields</h5>
                            <div id="formFields" class="mt-3">
                                @if (Model.FormFields.Any())
                                {
                                    @foreach (var field in Model.FormFields)
                                    {
                                        <div class="card mb-2" data-field-id="@field.FormFieldId">
                                            <div class="card-body">
                                                <div class="d-flex justify-content-between align-items-start">
                                                    <div class="flex-grow-1">
                                                        <h6 class="card-title">
                                                            @field.Label
                                                            @if (field.IsRequired)
                                                            {
                                                                <span class="text-danger">*</span>
                                                            }
                                                        </h6>
                                                        <p class="card-text">
                                                            <small class="text-muted">Type: @field.FieldType</small>
                                                            @if (!string.IsNullOrEmpty(field.HelpText))
                                                            {
                                                                <br /><small>@field.HelpText</small>
                                                            }
                                                        </p>
                                                        @if (!string.IsNullOrEmpty(field.Options))
                                                        {
                                                            <div class="mt-2">
                                                                <small class="text-muted">Options:</small>
                                                                <ul class="list-unstyled ms-3">
                                                                    @foreach (var option in field.Options.Split('\n', StringSplitOptions.RemoveEmptyEntries))
                                                                    {
                                                                        <li><small>â€¢ @option.Trim()</small></li>
                                                                    }
                                                                </ul>
                                                            </div>
                                                        }
                                                    </div>
                                                    <div class="btn-group-vertical">
                                                        <button type="button" class="btn btn-sm btn-outline-danger delete-field" data-field-id="@field.FormFieldId">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="alert alert-info" id="noFieldsMessage">
                                        No fields added yet. Add your first field using the form above.
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <hr />

                    <div class="d-flex justify-content-between">
                        <a asp-action="Index" class="btn btn-secondary">Back to Forms</a>
                        <div>
                            <a asp-action="Details" asp-route-id="@Model.FormId" class="btn btn-info">Preview Form</a>
                            @if (Model.FormFields.Any())
                            {
                                <a asp-action="Submissions" asp-route-id="@Model.FormId" class="btn btn-primary">View Submissions</a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Show/hide options field based on field type
            $('select[name="FieldType"]').change(function() {
                var fieldType = $(this).val();
                if (fieldType == '6' || fieldType == '7') { // Radio or Dropdown
                    $('#optionsContainer').show();
                } else {
                    $('#optionsContainer').hide();
                }
            });

            // Add field form submission
            $('#addFieldForm').submit(function(e) {
                e.preventDefault();
                
                var formData = {
                    FormId: $('input[name="FormId"]').val(),
                    Label: $('input[name="Label"]').val(),
                    FieldType: $('select[name="FieldType"]').val(),
                    HelpText: $('textarea[name="HelpText"]').val(),
                    Options: $('textarea[name="Options"]').val(),
                    IsRequired: $('input[name="IsRequired"]').is(':checked')
                };

                $.ajax({
                    url: '/api/FormFields',
                    method: 'POST',
                    data: JSON.stringify(formData),
                    contentType: 'application/json',
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(data) {
                        location.reload();
                    },
                    error: function(xhr, status, error) {
                        alert('Error adding field: ' + error);
                    }
                });
            });

            // Delete field
            $('.delete-field').click(function() {
                var fieldId = $(this).data('field-id');
                if (confirm('Are you sure you want to delete this field?')) {
                    $.ajax({
                        url: '/api/FormFields/' + fieldId,
                        method: 'DELETE',
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function() {
                            $('[data-field-id="' + fieldId + '"]').remove();
                            if ($('#formFields .card').length === 0) {
                                $('#formFields').html('<div class="alert alert-info" id="noFieldsMessage">No fields added yet. Add your first field using the form above.</div>');
                            }
                        },
                        error: function(xhr, status, error) {
                            alert('Error deleting field: ' + error);
                        }
                    });
                }
            });

            // Update form details
            $('#saveFormDetails').click(function() {
                // This would need additional implementation for form updates
                alert('Form details update functionality will be implemented in the next iteration.');
            });
        });
    </script>
}